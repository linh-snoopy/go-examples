// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "My API": Application User Types
//
// Command:
// $ goagen
// --design=github.com/linh-snoopy/go-examples/goatest/design
// --out=c:\Users\LENOVO\go\src\github.com\linh-snoopy\go-examples\goatest
// --version=v1.3.0

package client

import (
	"github.com/goadesign/goa"
)

// user user type.
type user struct {
	// User's email address
	Email *string `form:"email,omitempty" json:"email,omitempty" xml:"email,omitempty"`
	// User's name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Phone's number
	Phone *string `form:"phone,omitempty" json:"phone,omitempty" xml:"phone,omitempty"`
}

// Validate validates the user type instance.
func (ut *user) Validate() (err error) {
	if ut.Email == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "email"))
	}
	if ut.Name == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "name"))
	}
	return
}

// Publicize creates User from user
func (ut *user) Publicize() *User {
	var pub User
	if ut.Email != nil {
		pub.Email = *ut.Email
	}
	if ut.Name != nil {
		pub.Name = *ut.Name
	}
	if ut.Phone != nil {
		pub.Phone = ut.Phone
	}
	return &pub
}

// User user type.
type User struct {
	// User's email address
	Email string `form:"email" json:"email" xml:"email"`
	// User's name
	Name string `form:"name" json:"name" xml:"name"`
	// Phone's number
	Phone *string `form:"phone,omitempty" json:"phone,omitempty" xml:"phone,omitempty"`
}

// Validate validates the User type instance.
func (ut *User) Validate() (err error) {
	if ut.Email == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`type`, "email"))
	}
	if ut.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`type`, "name"))
	}
	return
}
