consumes:
- application/json
definitions:
  MyUser:
    description: MyUser media type (default view)
    example:
      email: Repellendus quas in id.
      name: Expedita et aliquam.
      phone: Ut quod id rerum aperiam est.
    properties:
      email:
        description: User's email address
        example: Repellendus quas in id.
        type: string
      name:
        description: User's name
        example: Expedita et aliquam.
        type: string
      phone:
        description: Phone's number
        example: Ut quod id rerum aperiam est.
        type: string
    title: 'Mediatype identifier: vnd.my.user; view=default'
    type: object
  MyUserCollection:
    description: MyUserCollection is the media type for an array of MyUser (default
      view)
    example:
    - email: Repellendus quas in id.
      name: Expedita et aliquam.
      phone: Ut quod id rerum aperiam est.
    items:
      $ref: '#/definitions/MyUser'
    title: 'Mediatype identifier: vnd.my.user; type=collection; view=default'
    type: array
  user:
    example:
      email: Et beatae asperiores perferendis.
      name: Ut voluptates similique ratione autem soluta.
      phone: Repudiandae eos velit provident.
    properties:
      email:
        description: User's email address
        example: Et beatae asperiores perferendis.
        type: string
      name:
        description: User's name
        example: Ut voluptates similique ratione autem soluta.
        type: string
      phone:
        description: Phone's number
        example: Repudiandae eos velit provident.
        type: string
    required:
    - email
    - name
    title: user
    type: object
host: localhost:8080
info:
  title: Users Management
  version: ""
paths:
  /users/add:
    post:
      description: Register a new user
      operationId: Users#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/user'
      responses:
        "201":
          description: Created
      schemes:
      - http
      summary: add Users
      tags:
      - Users
  /users/detail:
    get:
      description: Get detail of user
      operationId: Users#detail
      produces:
      - vnd.my.user
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MyUser'
      schemes:
      - http
      summary: detail Users
      tags:
      - Users
  /users/list:
    get:
      description: List all users
      operationId: Users#list
      produces:
      - vnd.my.user; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MyUserCollection'
      schemes:
      - http
      summary: list Users
      tags:
      - Users
produces:
- application/json
responses:
  Created:
    description: Created
schemes:
- http
swagger: "2.0"
